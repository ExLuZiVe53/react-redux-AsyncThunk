{"version":3,"file":"static/js/649.b9fc17e5.chunk.js","mappings":"4JAMA,IAJqB,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QACtB,OAAOC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,QAAOC,SAAEH,GAC/B,C,+JCYA,EAbqB,SAAHD,GAAqC,IAA/BK,EAAEL,EAAFK,GAAIC,EAAKN,EAALM,MAAOC,EAAMP,EAANO,OAAQC,EAAIR,EAAJQ,KACzC,OACEN,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,UAC1BK,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,iBAAAC,OAAmBP,GAAKD,SAAA,EAC9BK,EAAAA,EAAAA,MAAA,QAAAL,SAAA,CAAM,OAAKC,MACXI,EAAAA,EAAAA,MAAA,MAAAL,SAAA,CAAI,UAAQE,MACZG,EAAAA,EAAAA,MAAA,MAAAL,SAAA,CAAI,YAAUG,MACdE,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,SAAOI,SAIlB,ECUA,EArBiB,SAAHR,GAAmB,IAAba,EAAKb,EAALa,MACZC,EAAYC,MAAMC,QAAQH,IAAUA,EAAMI,OAEhD,OACEf,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAUC,SACrBU,GACCD,EAAMK,KAAI,SAAAC,GACR,OACEjB,EAAAA,EAAAA,KAACkB,EAAY,CACXf,GAAIc,EAAKd,GACTC,MAAOa,EAAKb,MACZC,OAAQY,EAAKZ,OACbC,KAAMW,EAAKX,MACNW,EAAKd,GAGhB,KAGR,E,UCeA,EA/BkB,WAChB,IAAAgB,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCR,EAAKU,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BR,EAAAA,EAAAA,UAAS,MAAKS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAkBtB,OAhBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,eAAAnC,GAAAoC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEC,OAFDF,EAAAC,KAAA,EAElBZ,GAAa,GAAMW,EAAAE,KAAA,GACKC,EAAAA,EAAAA,MAAa,KAAD,EAA9BJ,EAASC,EAAAI,KAEfnB,EAASc,GAAWC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEpBP,EAASO,EAAAK,GAAM5C,SAAS,QAEJ,OAFIuC,EAAAC,KAAA,GAExBZ,GAAa,GAAOW,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAT,EAAA,wBAEvB,kBAXkB,OAAAtC,EAAAgD,MAAA,KAAAC,UAAA,KAYnBd,GACF,GAAG,KAGD1B,EAAAA,EAAAA,MAAA,OAAAL,SAAA,CACGwB,IAAa1B,EAAAA,EAAAA,KAACgD,EAAAA,EAAM,IACpBlB,IAAS9B,EAAAA,EAAAA,KAACiD,EAAAA,EAAY,CAAClD,QAAS+B,KAEjC9B,EAAAA,EAAAA,KAACkD,EAAQ,CAACvC,MAAOA,MAGvB,C","sources":["components/ErrorMessage.jsx","components/PostListItem.jsx","components/PostList.jsx","pages/PostsPage.jsx"],"sourcesContent":["import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PostListItem = ({ id, title, userId, body }) => {\n  return (\n    <li className=\"postListItem\">\n      <Link to={`/post-details/${id}`}>\n        <span>Id: {id}</span>\n        <h3>Title: {title}</h3>\n        <h4>User Id: {userId}</h4>\n        <p>Body: {body}</p>\n      </Link>\n    </li>\n  );\n};\n\nexport default PostListItem;\n","import React from 'react';\nimport PostListItem from './PostListItem';\n\nconst PostList = ({ posts }) => {\n  const showPosts = Array.isArray(posts) && posts.length;\n\n  return (\n    <ul className=\"postList\">\n      {showPosts &&\n        posts.map(post => {\n          return (\n            <PostListItem\n              id={post.id}\n              title={post.title}\n              userId={post.userId}\n              body={post.body}\n              key={post.id}\n            />\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default PostList;\n","import ErrorMessage from 'components/ErrorMessage';\nimport Loader from 'components/Loader';\nimport PostList from 'components/PostList';\nimport React, { useEffect, useState } from 'react';\nimport { fetchPosts } from 'services/api';\n\nconst PostsPage = () => {\n  const [posts, setPosts] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchAllPosts = async () => {\n      try {\n        setIsLoading(true);\n        const postsData = await fetchPosts();\n\n        setPosts(postsData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchAllPosts();\n  }, []);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n\n      <PostList posts={posts} />\n    </div>\n  );\n};\n\nexport default PostsPage;\n"],"names":["_ref","message","_jsx","className","children","id","title","userId","body","_jsxs","Link","to","concat","posts","showPosts","Array","isArray","length","map","post","PostListItem","_useState","useState","_useState2","_slicedToArray","setPosts","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchAllPosts","_asyncToGenerator","_regeneratorRuntime","_callee","postsData","_context","prev","next","fetchPosts","sent","t0","finish","stop","apply","arguments","Loader","ErrorMessage","PostList"],"sourceRoot":""}