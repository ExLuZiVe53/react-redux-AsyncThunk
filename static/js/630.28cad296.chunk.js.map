{"version":3,"file":"static/js/630.28cad296.chunk.js","mappings":"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","sources":["components/ErrorMessage.jsx","pages/PostDetailsPage.jsx","services/api.js"],"sourcesContent":["import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;\n","import React, { Suspense, lazy, useEffect, useRef } from 'react';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n// import PostCommentsPage from './PostCommentsPage';\nimport Loader from 'components/Loader';\nimport ErrorMessage from 'components/ErrorMessage';\n\nimport { findPostById } from 'services/api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addPost,\n  setError,\n  setIsLoading,\n  setPostDetails,\n} from 'redux/postDetailReducer';\n\nconst PostCommentsPage = lazy(() => import('pages/PostCommentsPage'));\n\nconst PostDetailsPage = () => {\n  const { postId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const postDetails = useSelector(state => state.postDetails.postDetailsData);\n  const isLoading = useSelector(state => state.postDetails.isLoading);\n  const error = useSelector(state => state.postDetails.error);\n  const dispatch = useDispatch();\n  // const [postDetails, setPostDetails] = useState(null);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!postId) return;\n\n    const fetchAllPosts = async () => {\n      try {\n        // setIsLoading(true);\n        dispatch(setIsLoading(true));\n        const postData = await findPostById(postId);\n        // setPostDetails(postData);\n        dispatch(setPostDetails(postData));\n      } catch (error) {\n        // setError(error.message);\n        dispatch(setError(error.message));\n      } finally {\n        // setIsLoading(false);\n        dispatch(setIsLoading(false));\n      }\n    };\n\n    fetchAllPosts();\n  }, [postId, dispatch]);\n\n  return (\n    <div>\n      <Link to={backLinkHref.current}>Go Back</Link>\n      <button onClick={() => dispatch(addPost({ title: '123', body: '123' }))}>\n        Click to add post to STATE\n      </button>\n\n      {isLoading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      {postDetails !== null && (\n        <div>\n          <h2>Post Title: {postDetails.title}</h2>\n          <p>Post Body: {postDetails.body}</p>\n        </div>\n      )}\n\n      <div>\n        <NavLink to=\"comments\" className=\"header-link\">\n          Comments\n        </NavLink>\n      </div>\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"comments\" element={<PostCommentsPage />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default PostDetailsPage;\n","import axios from 'axios';\n\nexport const fetchPosts = async () => {\n  const { data } = await axios.get(\n    'https://jsonplaceholder.typicode.com/posts/'\n  );\n  return data;\n};\n\nexport const findPostById = async postId => {\n  const { data } = await axios.get(\n    `https://jsonplaceholder.typicode.com/posts/${postId}`\n  );\n  return data;\n};\n\nexport const findPostCommentsById = async postId => {\n  const { data } = await axios.get(\n    `https://jsonplaceholder.typicode.com/posts/${postId}/comments`\n  );\n  return data;\n};\n"],"names":["_ref","message","_jsx","className","children","PostCommentsPage","lazy","_location$state$from","_location$state","postId","useParams","location","useLocation","backLinkHref","useRef","state","from","postDetails","useSelector","postDetailsData","isLoading","error","dispatch","useDispatch","useEffect","fetchAllPosts","_asyncToGenerator","_regeneratorRuntime","_callee","postData","_context","prev","next","setIsLoading","findPostById","sent","setPostDetails","t0","setError","finish","stop","apply","arguments","_jsxs","Link","to","current","onClick","addPost","title","body","Loader","ErrorMessage","NavLink","Suspense","fallback","Routes","Route","path","element","fetchPosts","_yield$axios$get","data","axios","abrupt","_ref2","_callee2","_yield$axios$get2","_context2","concat","_x","findPostCommentsById","_ref3","_callee3","_yield$axios$get3","_context3","_x2"],"sourceRoot":""}